// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow_serving/apis/predict.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class ModelSpec;
@class TensorProto;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - PredictRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface PredictRoot : GPBRootObject
@end

#pragma mark - PredictRequest

typedef GPB_ENUM(PredictRequest_FieldNumber) {
  PredictRequest_FieldNumber_ModelSpec = 1,
  PredictRequest_FieldNumber_Inputs = 2,
  PredictRequest_FieldNumber_OutputFilterArray = 3,
};

/**
 * PredictRequest specifies which TensorFlow model to run, as well as
 * how inputs are mapped to tensors and how outputs are filtered before
 * returning to user.
 **/
@interface PredictRequest : GPBMessage

/** Model Specification. */
@property(nonatomic, readwrite, strong, null_resettable) ModelSpec *modelSpec;
/** Test to see if @c modelSpec has been set. */
@property(nonatomic, readwrite) BOOL hasModelSpec;

/**
 * Input tensors.
 * Names of input tensor are alias names. The mapping from aliases to real
 * input tensor names is expected to be stored as named generic signature
 * under the key "inputs" in the model export.
 * Each alias listed in a generic signature named "inputs" should be provided
 * exactly once in order to run the prediction.
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, TensorProto*> *inputs;
/** The number of items in @c inputs without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger inputs_Count;

/**
 * Output filter.
 * Names specified are alias names. The mapping from aliases to real output
 * tensor names is expected to be stored as named generic signature under
 * the key "outputs" in the model export.
 * Only tensors specified here will be run/fetched and returned, with the
 * exception that when none is specified, all tensors specified in the
 * named signature will be run/fetched and returned.
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *outputFilterArray;
/** The number of items in @c outputFilterArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger outputFilterArray_Count;

@end

#pragma mark - PredictResponse

typedef GPB_ENUM(PredictResponse_FieldNumber) {
  PredictResponse_FieldNumber_Outputs = 1,
};

/**
 * Response for PredictRequest on successful run.
 **/
@interface PredictResponse : GPBMessage

/** Output tensors. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, TensorProto*> *outputs;
/** The number of items in @c outputs without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger outputs_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
