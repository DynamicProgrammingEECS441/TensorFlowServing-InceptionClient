// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow_serving/apis/model.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class GPBInt64Value;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - ModelRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface ModelRoot : GPBRootObject
@end

#pragma mark - ModelSpec

typedef GPB_ENUM(ModelSpec_FieldNumber) {
  ModelSpec_FieldNumber_Name = 1,
  ModelSpec_FieldNumber_Version = 2,
  ModelSpec_FieldNumber_SignatureName = 3,
};

/**
 * Metadata for an inference request such as the model name and version.
 **/
@interface ModelSpec : GPBMessage

/** Required servable name. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/**
 * Optional version. If unspecified, will use the latest (numerical) version.
 * Typically not needed unless coordinating across multiple models that were
 * co-trained and/or have inter-dependencies on the versions used at inference
 * time.
 **/
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Value *version;
/** Test to see if @c version has been set. */
@property(nonatomic, readwrite) BOOL hasVersion;

/**
 * A named signature to evaluate. If unspecified, the default signature will
 * be used. Note that only MultiInference will initially support this.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *signatureName;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
