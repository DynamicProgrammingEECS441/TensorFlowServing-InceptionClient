// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/rewriter_config.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class AutoParallelOptions;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum RewriterConfig_MemOptType

typedef GPB_ENUM(RewriterConfig_MemOptType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RewriterConfig_MemOptType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** Fully disabled */
  RewriterConfig_MemOptType_NoMemOpt = 0,

  /** Driven by manual annotations */
  RewriterConfig_MemOptType_Manual = 1,
};

GPBEnumDescriptor *RewriterConfig_MemOptType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RewriterConfig_MemOptType_IsValidValue(int32_t value);

#pragma mark - RewriterConfigRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface RewriterConfigRoot : GPBRootObject
@end

#pragma mark - AutoParallelOptions

typedef GPB_ENUM(AutoParallelOptions_FieldNumber) {
  AutoParallelOptions_FieldNumber_Enable = 1,
  AutoParallelOptions_FieldNumber_NumReplicas = 2,
};

@interface AutoParallelOptions : GPBMessage

@property(nonatomic, readwrite) BOOL enable;

@property(nonatomic, readwrite) int32_t numReplicas;

@end

#pragma mark - RewriterConfig

typedef GPB_ENUM(RewriterConfig_FieldNumber) {
  RewriterConfig_FieldNumber_OptimizeTensorLayout = 1,
  RewriterConfig_FieldNumber_DisableModelPruning = 2,
  RewriterConfig_FieldNumber_ConstantFolding = 3,
  RewriterConfig_FieldNumber_MemoryOptimization = 4,
  RewriterConfig_FieldNumber_AutoParallel = 5,
  RewriterConfig_FieldNumber_OptimizersArray = 100,
};

@interface RewriterConfig : GPBMessage

@property(nonatomic, readwrite) BOOL optimizeTensorLayout;

@property(nonatomic, readwrite) BOOL disableModelPruning;

@property(nonatomic, readwrite) BOOL constantFolding;

@property(nonatomic, readwrite) RewriterConfig_MemOptType memoryOptimization;

@property(nonatomic, readwrite, strong, null_resettable) AutoParallelOptions *autoParallel;
/** Test to see if @c autoParallel has been set. */
@property(nonatomic, readwrite) BOOL hasAutoParallel;

/**
 * If non-empty, will use this as an alternative way to specify a list of
 * optimizations to turn on and the order of the optimizations.
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *optimizersArray;
/** The number of items in @c optimizersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger optimizersArray_Count;

@end

/**
 * Fetches the raw value of a @c RewriterConfig's @c memoryOptimization property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RewriterConfig_MemoryOptimization_RawValue(RewriterConfig *message);
/**
 * Sets the raw value of an @c RewriterConfig's @c memoryOptimization property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRewriterConfig_MemoryOptimization_RawValue(RewriterConfig *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
