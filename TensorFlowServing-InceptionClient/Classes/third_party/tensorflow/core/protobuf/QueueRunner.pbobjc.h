// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/queue_runner.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - QueueRunnerRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface QueueRunnerRoot : GPBRootObject
@end

#pragma mark - QueueRunnerDef

typedef GPB_ENUM(QueueRunnerDef_FieldNumber) {
  QueueRunnerDef_FieldNumber_QueueName = 1,
  QueueRunnerDef_FieldNumber_EnqueueOpNameArray = 2,
  QueueRunnerDef_FieldNumber_CloseOpName = 3,
  QueueRunnerDef_FieldNumber_CancelOpName = 4,
  QueueRunnerDef_FieldNumber_QueueClosedExceptionTypesArray = 5,
};

/**
 * Protocol buffer representing a QueueRunner.
 **/
@interface QueueRunnerDef : GPBMessage

/** Queue name. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *queueName;

/** A list of enqueue operations. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *enqueueOpNameArray;
/** The number of items in @c enqueueOpNameArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger enqueueOpNameArray_Count;

/** The operation to run to close the queue. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *closeOpName;

/** The operation to run to cancel the queue. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *cancelOpName;

/**
 * A list of exception types considered to signal a safely closed queue
 * if raised during enqueue operations.
 **/
// |queueClosedExceptionTypesArray| contains |Code|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *queueClosedExceptionTypesArray;
/** The number of items in @c queueClosedExceptionTypesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger queueClosedExceptionTypesArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
