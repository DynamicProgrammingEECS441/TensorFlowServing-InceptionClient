// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/device_properties.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - DevicePropertiesRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface DevicePropertiesRoot : GPBRootObject
@end

#pragma mark - DeviceProperties

typedef GPB_ENUM(DeviceProperties_FieldNumber) {
  DeviceProperties_FieldNumber_Type = 1,
  DeviceProperties_FieldNumber_Vendor = 2,
  DeviceProperties_FieldNumber_Model = 3,
  DeviceProperties_FieldNumber_Frequency = 4,
  DeviceProperties_FieldNumber_NumCores = 5,
  DeviceProperties_FieldNumber_Environment = 6,
  DeviceProperties_FieldNumber_NumRegisters = 7,
  DeviceProperties_FieldNumber_L1CacheSize = 8,
  DeviceProperties_FieldNumber_L2CacheSize = 9,
  DeviceProperties_FieldNumber_L3CacheSize = 10,
  DeviceProperties_FieldNumber_SharedMemorySizePerMultiprocessor = 11,
  DeviceProperties_FieldNumber_MemorySize = 12,
  DeviceProperties_FieldNumber_Bandwidth = 13,
};

@interface DeviceProperties : GPBMessage

/** Device type (CPU, GPU, ...) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *type;

/** Vendor (Intel, nvidia, ...) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *vendor;

/** Model (Haswell, K40, ...) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *model;

/** Core Frequency in Mhz */
@property(nonatomic, readwrite) int64_t frequency;

/** Number of cores */
@property(nonatomic, readwrite) int64_t numCores;

/**
 * Version of the tools and libraries used with this device (e.g. gcc 4.9,
 * cudnn 5.1)
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *environment;
/** The number of items in @c environment without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger environment_Count;

/** Number of registers per core. */
@property(nonatomic, readwrite) int64_t numRegisters;

/** L1 cache size in bytes */
@property(nonatomic, readwrite) int64_t l1CacheSize;

/** L2 cache size in bytes */
@property(nonatomic, readwrite) int64_t l2CacheSize;

/** L3 cache size in bytes */
@property(nonatomic, readwrite) int64_t l3CacheSize;

/**
 * Shared memory size per multiprocessor in bytes. This field is
 * applicable to GPUs only.
 **/
@property(nonatomic, readwrite) int64_t sharedMemorySizePerMultiprocessor;

/** Memory size in bytes */
@property(nonatomic, readwrite) int64_t memorySize;

/** Memory bandwidth in KB/s */
@property(nonatomic, readwrite) int64_t bandwidth;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
