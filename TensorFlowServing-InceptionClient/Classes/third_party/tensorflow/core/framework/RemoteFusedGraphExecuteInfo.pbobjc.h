// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/framework/remote_fused_graph_execute_info.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class GraphDef;
@class RemoteFusedGraphExecuteInfo_TensorShapeTypeProto;
@class TensorShapeProto;
GPB_ENUM_FWD_DECLARE(DataType);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - RemoteFusedGraphExecuteInfoRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface RemoteFusedGraphExecuteInfoRoot : GPBRootObject
@end

#pragma mark - RemoteFusedGraphExecuteInfo

typedef GPB_ENUM(RemoteFusedGraphExecuteInfo_FieldNumber) {
  RemoteFusedGraphExecuteInfo_FieldNumber_RemoteGraph = 1,
  RemoteFusedGraphExecuteInfo_FieldNumber_GraphInputNodeNameArray = 2,
  RemoteFusedGraphExecuteInfo_FieldNumber_GraphOutputNodeNameArray = 3,
  RemoteFusedGraphExecuteInfo_FieldNumber_ExecutorName = 4,
  RemoteFusedGraphExecuteInfo_FieldNumber_SerializedExecutorParameters = 5,
  RemoteFusedGraphExecuteInfo_FieldNumber_DefaultGraphInputTensorShapeArray = 6,
  RemoteFusedGraphExecuteInfo_FieldNumber_DefaultGraphOutputTensorShapeArray = 7,
};

/**
 * Protocol buffer representing a handle to a tensorflow resource. Handles are
 * not valid across executions, but can be serialized back and forth from within
 * a single run.
 **/
@interface RemoteFusedGraphExecuteInfo : GPBMessage

/** Definition of remote graph */
@property(nonatomic, readwrite, strong, null_resettable) GraphDef *remoteGraph;
/** Test to see if @c remoteGraph has been set. */
@property(nonatomic, readwrite) BOOL hasRemoteGraph;

/** Remote fused graph input node name */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *graphInputNodeNameArray;
/** The number of items in @c graphInputNodeNameArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger graphInputNodeNameArray_Count;

/** Remote fused graph output node name */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *graphOutputNodeNameArray;
/** The number of items in @c graphOutputNodeNameArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger graphOutputNodeNameArray_Count;

/** Executor's name */
@property(nonatomic, readwrite, copy, null_resettable) NSString *executorName;

/** Optional: Parameters given to the executor */
@property(nonatomic, readwrite, copy, null_resettable) NSData *serializedExecutorParameters;

/**
 * Optional: Default graph input tensor shape used to allocate memory
 * before executing op
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<RemoteFusedGraphExecuteInfo_TensorShapeTypeProto*> *defaultGraphInputTensorShapeArray;
/** The number of items in @c defaultGraphInputTensorShapeArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger defaultGraphInputTensorShapeArray_Count;

/**
 * Optional: Default graph input tensor shape used to allocate memory
 * before executing op
 * TODO(satok): Remote output tensor shape once shape information is stored
 * in NodeDef
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<RemoteFusedGraphExecuteInfo_TensorShapeTypeProto*> *defaultGraphOutputTensorShapeArray;
/** The number of items in @c defaultGraphOutputTensorShapeArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger defaultGraphOutputTensorShapeArray_Count;

@end

#pragma mark - RemoteFusedGraphExecuteInfo_TensorShapeTypeProto

typedef GPB_ENUM(RemoteFusedGraphExecuteInfo_TensorShapeTypeProto_FieldNumber) {
  RemoteFusedGraphExecuteInfo_TensorShapeTypeProto_FieldNumber_Dtype = 1,
  RemoteFusedGraphExecuteInfo_TensorShapeTypeProto_FieldNumber_Shape = 2,
};

@interface RemoteFusedGraphExecuteInfo_TensorShapeTypeProto : GPBMessage

@property(nonatomic, readwrite) enum DataType dtype;

@property(nonatomic, readwrite, strong, null_resettable) TensorShapeProto *shape;
/** Test to see if @c shape has been set. */
@property(nonatomic, readwrite) BOOL hasShape;

@end

/**
 * Fetches the raw value of a @c RemoteFusedGraphExecuteInfo_TensorShapeTypeProto's @c dtype property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t RemoteFusedGraphExecuteInfo_TensorShapeTypeProto_Dtype_RawValue(RemoteFusedGraphExecuteInfo_TensorShapeTypeProto *message);
/**
 * Sets the raw value of an @c RemoteFusedGraphExecuteInfo_TensorShapeTypeProto's @c dtype property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetRemoteFusedGraphExecuteInfo_TensorShapeTypeProto_Dtype_RawValue(RemoteFusedGraphExecuteInfo_TensorShapeTypeProto *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
