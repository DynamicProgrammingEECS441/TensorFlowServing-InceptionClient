// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/framework/graph_transfer_info.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class GraphTransferInfo_ConstNodeInfo;
@class GraphTransferInfo_GraphInputNodeInfo;
@class GraphTransferInfo_GraphOutputNodeInfo;
@class GraphTransferInfo_NodeInfo;
@class GraphTransferInfo_NodeInput;
@class GraphTransferInfo_NodeInputInfo;
@class GraphTransferInfo_NodeOutputInfo;
GPB_ENUM_FWD_DECLARE(DataType);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum GraphTransferInfo_Destination

typedef GPB_ENUM(GraphTransferInfo_Destination) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  GraphTransferInfo_Destination_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  GraphTransferInfo_Destination_Nop = 0,
  GraphTransferInfo_Destination_Hexagon = 1,
};

GPBEnumDescriptor *GraphTransferInfo_Destination_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL GraphTransferInfo_Destination_IsValidValue(int32_t value);

#pragma mark - GraphTransferInfoRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface GraphTransferInfoRoot : GPBRootObject
@end

#pragma mark - GraphTransferInfo

typedef GPB_ENUM(GraphTransferInfo_FieldNumber) {
  GraphTransferInfo_FieldNumber_NodeInfoArray = 1,
  GraphTransferInfo_FieldNumber_ConstNodeInfoArray = 2,
  GraphTransferInfo_FieldNumber_NodeInputInfoArray = 3,
  GraphTransferInfo_FieldNumber_NodeOutputInfoArray = 4,
  GraphTransferInfo_FieldNumber_GraphInputNodeInfoArray = 5,
  GraphTransferInfo_FieldNumber_GraphOutputNodeInfoArray = 6,
  GraphTransferInfo_FieldNumber_Destination = 7,
};

/**
 * Protocol buffer representing a handle to a tensorflow resource. Handles are
 * not valid across executions, but can be serialized back and forth from within
 * a single run.
 **/
@interface GraphTransferInfo : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GraphTransferInfo_NodeInfo*> *nodeInfoArray;
/** The number of items in @c nodeInfoArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger nodeInfoArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GraphTransferInfo_ConstNodeInfo*> *constNodeInfoArray;
/** The number of items in @c constNodeInfoArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger constNodeInfoArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GraphTransferInfo_NodeInputInfo*> *nodeInputInfoArray;
/** The number of items in @c nodeInputInfoArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger nodeInputInfoArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GraphTransferInfo_NodeOutputInfo*> *nodeOutputInfoArray;
/** The number of items in @c nodeOutputInfoArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger nodeOutputInfoArray_Count;

/** Input Node parameters of transferred graph */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GraphTransferInfo_GraphInputNodeInfo*> *graphInputNodeInfoArray;
/** The number of items in @c graphInputNodeInfoArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger graphInputNodeInfoArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GraphTransferInfo_GraphOutputNodeInfo*> *graphOutputNodeInfoArray;
/** The number of items in @c graphOutputNodeInfoArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger graphOutputNodeInfoArray_Count;

/** Destination of graph transfer */
@property(nonatomic, readwrite) GraphTransferInfo_Destination destination;

@end

/**
 * Fetches the raw value of a @c GraphTransferInfo's @c destination property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t GraphTransferInfo_Destination_RawValue(GraphTransferInfo *message);
/**
 * Sets the raw value of an @c GraphTransferInfo's @c destination property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetGraphTransferInfo_Destination_RawValue(GraphTransferInfo *message, int32_t value);

#pragma mark - GraphTransferInfo_NodeInput

typedef GPB_ENUM(GraphTransferInfo_NodeInput_FieldNumber) {
  GraphTransferInfo_NodeInput_FieldNumber_NodeId = 1,
  GraphTransferInfo_NodeInput_FieldNumber_OutputPort = 2,
};

@interface GraphTransferInfo_NodeInput : GPBMessage

@property(nonatomic, readwrite) int32_t nodeId;

@property(nonatomic, readwrite) int32_t outputPort;

@end

#pragma mark - GraphTransferInfo_NodeInfo

typedef GPB_ENUM(GraphTransferInfo_NodeInfo_FieldNumber) {
  GraphTransferInfo_NodeInfo_FieldNumber_Name = 1,
  GraphTransferInfo_NodeInfo_FieldNumber_NodeId = 2,
  GraphTransferInfo_NodeInfo_FieldNumber_TypeName = 3,
  GraphTransferInfo_NodeInfo_FieldNumber_SocOpId = 4,
  GraphTransferInfo_NodeInfo_FieldNumber_PaddingId = 5,
  GraphTransferInfo_NodeInfo_FieldNumber_InputCount = 6,
  GraphTransferInfo_NodeInfo_FieldNumber_OutputCount = 7,
};

@interface GraphTransferInfo_NodeInfo : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite) int32_t nodeId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *typeName;

@property(nonatomic, readwrite) int32_t socOpId;

@property(nonatomic, readwrite) int32_t paddingId;

@property(nonatomic, readwrite) int32_t inputCount;

@property(nonatomic, readwrite) int32_t outputCount;

@end

#pragma mark - GraphTransferInfo_ConstNodeInfo

typedef GPB_ENUM(GraphTransferInfo_ConstNodeInfo_FieldNumber) {
  GraphTransferInfo_ConstNodeInfo_FieldNumber_Name = 1,
  GraphTransferInfo_ConstNodeInfo_FieldNumber_NodeId = 2,
  GraphTransferInfo_ConstNodeInfo_FieldNumber_ShapeArray = 3,
  GraphTransferInfo_ConstNodeInfo_FieldNumber_Data_p = 4,
  GraphTransferInfo_ConstNodeInfo_FieldNumber_Dtype = 5,
};

@interface GraphTransferInfo_ConstNodeInfo : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite) int32_t nodeId;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *shapeArray;
/** The number of items in @c shapeArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger shapeArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSData *data_p;

@property(nonatomic, readwrite) enum DataType dtype;

@end

/**
 * Fetches the raw value of a @c GraphTransferInfo_ConstNodeInfo's @c dtype property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t GraphTransferInfo_ConstNodeInfo_Dtype_RawValue(GraphTransferInfo_ConstNodeInfo *message);
/**
 * Sets the raw value of an @c GraphTransferInfo_ConstNodeInfo's @c dtype property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetGraphTransferInfo_ConstNodeInfo_Dtype_RawValue(GraphTransferInfo_ConstNodeInfo *message, int32_t value);

#pragma mark - GraphTransferInfo_NodeInputInfo

typedef GPB_ENUM(GraphTransferInfo_NodeInputInfo_FieldNumber) {
  GraphTransferInfo_NodeInputInfo_FieldNumber_NodeId = 1,
  GraphTransferInfo_NodeInputInfo_FieldNumber_NodeInputArray = 2,
};

@interface GraphTransferInfo_NodeInputInfo : GPBMessage

@property(nonatomic, readwrite) int32_t nodeId;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GraphTransferInfo_NodeInput*> *nodeInputArray;
/** The number of items in @c nodeInputArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger nodeInputArray_Count;

@end

#pragma mark - GraphTransferInfo_NodeOutputInfo

typedef GPB_ENUM(GraphTransferInfo_NodeOutputInfo_FieldNumber) {
  GraphTransferInfo_NodeOutputInfo_FieldNumber_NodeId = 1,
  GraphTransferInfo_NodeOutputInfo_FieldNumber_MaxByteSizeArray = 2,
};

@interface GraphTransferInfo_NodeOutputInfo : GPBMessage

@property(nonatomic, readwrite) int32_t nodeId;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt32Array *maxByteSizeArray;
/** The number of items in @c maxByteSizeArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger maxByteSizeArray_Count;

@end

#pragma mark - GraphTransferInfo_GraphInputNodeInfo

typedef GPB_ENUM(GraphTransferInfo_GraphInputNodeInfo_FieldNumber) {
  GraphTransferInfo_GraphInputNodeInfo_FieldNumber_Name = 1,
  GraphTransferInfo_GraphInputNodeInfo_FieldNumber_ShapeArray = 2,
  GraphTransferInfo_GraphInputNodeInfo_FieldNumber_Dtype = 3,
};

@interface GraphTransferInfo_GraphInputNodeInfo : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *shapeArray;
/** The number of items in @c shapeArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger shapeArray_Count;

@property(nonatomic, readwrite) enum DataType dtype;

@end

/**
 * Fetches the raw value of a @c GraphTransferInfo_GraphInputNodeInfo's @c dtype property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t GraphTransferInfo_GraphInputNodeInfo_Dtype_RawValue(GraphTransferInfo_GraphInputNodeInfo *message);
/**
 * Sets the raw value of an @c GraphTransferInfo_GraphInputNodeInfo's @c dtype property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetGraphTransferInfo_GraphInputNodeInfo_Dtype_RawValue(GraphTransferInfo_GraphInputNodeInfo *message, int32_t value);

#pragma mark - GraphTransferInfo_GraphOutputNodeInfo

typedef GPB_ENUM(GraphTransferInfo_GraphOutputNodeInfo_FieldNumber) {
  GraphTransferInfo_GraphOutputNodeInfo_FieldNumber_Name = 1,
  GraphTransferInfo_GraphOutputNodeInfo_FieldNumber_ShapeArray = 2,
  GraphTransferInfo_GraphOutputNodeInfo_FieldNumber_Dtype = 3,
};

@interface GraphTransferInfo_GraphOutputNodeInfo : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *shapeArray;
/** The number of items in @c shapeArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger shapeArray_Count;

@property(nonatomic, readwrite) enum DataType dtype;

@end

/**
 * Fetches the raw value of a @c GraphTransferInfo_GraphOutputNodeInfo's @c dtype property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t GraphTransferInfo_GraphOutputNodeInfo_Dtype_RawValue(GraphTransferInfo_GraphOutputNodeInfo *message);
/**
 * Sets the raw value of an @c GraphTransferInfo_GraphOutputNodeInfo's @c dtype property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetGraphTransferInfo_GraphOutputNodeInfo_Dtype_RawValue(GraphTransferInfo_GraphOutputNodeInfo *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
