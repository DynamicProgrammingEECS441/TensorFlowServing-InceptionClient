// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/framework/resource_handle.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - ResourceHandleRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface ResourceHandleRoot : GPBRootObject
@end

#pragma mark - ResourceHandle

typedef GPB_ENUM(ResourceHandle_FieldNumber) {
  ResourceHandle_FieldNumber_Device = 1,
  ResourceHandle_FieldNumber_Container = 2,
  ResourceHandle_FieldNumber_Name = 3,
  ResourceHandle_FieldNumber_HashCode = 4,
  ResourceHandle_FieldNumber_MaybeTypeName = 5,
};

/**
 * Protocol buffer representing a handle to a tensorflow resource. Handles are
 * not valid across executions, but can be serialized back and forth from within
 * a single run.
 **/
@interface ResourceHandle : GPBMessage

/** Unique name for the device containing the resource. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *device;

/** Container in which this resource is placed. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *container;

/** Unique name of this resource. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/**
 * Hash code for the type of the resource. Is only valid in the same device
 * and in the same execution.
 **/
@property(nonatomic, readwrite) uint64_t hashCode;

/**
 * For debug-only, the name of the type pointed to by this handle, if
 * available.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *maybeTypeName;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
