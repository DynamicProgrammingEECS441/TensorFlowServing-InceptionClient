// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/framework/graph.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class FunctionDefLibrary;
@class NodeDef;
@class VersionDef;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - GraphRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface GraphRoot : GPBRootObject
@end

#pragma mark - GraphDef

typedef GPB_ENUM(GraphDef_FieldNumber) {
  GraphDef_FieldNumber_NodeArray = 1,
  GraphDef_FieldNumber_Library = 2,
  GraphDef_FieldNumber_Version = 3,
  GraphDef_FieldNumber_Versions = 4,
};

/**
 * Represents the graph of operations
 **/
@interface GraphDef : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NodeDef*> *nodeArray;
/** The number of items in @c nodeArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger nodeArray_Count;

/**
 * Compatibility versions of the graph.  See core/public/version.h for version
 * history.  The GraphDef version is distinct from the TensorFlow version, and
 * each release of TensorFlow will support a range of GraphDef versions.
 **/
@property(nonatomic, readwrite, strong, null_resettable) VersionDef *versions;
/** Test to see if @c versions has been set. */
@property(nonatomic, readwrite) BOOL hasVersions;

/**
 * Deprecated single version field; use versions above instead.  Since all
 * GraphDef changes before "versions" was introduced were forward
 * compatible, this field is entirely ignored.
 **/
@property(nonatomic, readwrite) int32_t version DEPRECATED_ATTRIBUTE;

/**
 * EXPERIMENTAL. DO NOT USE OR DEPEND ON THIS YET.
 *
 * "library" provides user-defined functions.
 *
 * Naming:
 *   * library.function.name are in a flat namespace.
 *     NOTE: We may need to change it to be hierarchical to support
 *     different orgs. E.g.,
 *     { "/google/nn", { ... }},
 *     { "/google/vision", { ... }}
 *     { "/org_foo/module_bar", { ... }}
 *     map<string, FunctionDefLib> named_lib;
 *   * If node[i].op is the name of one function in "library",
 *     node[i] is deemed as a function call. Otherwise, node[i].op
 *     must be a primitive operation supported by the runtime.
 *
 *
 * Function call semantics:
 *
 *   * The callee may start execution as soon as some of its inputs
 *     are ready. The caller may want to use Tuple() mechanism to
 *     ensure all inputs are ready in the same time.
 *
 *   * The consumer of return values may start executing as soon as
 *     the return values the consumer depends on are ready.  The
 *     consumer may want to use Tuple() mechanism to ensure the
 *     consumer does not start until all return values of the callee
 *     function are ready.
 **/
@property(nonatomic, readwrite, strong, null_resettable) FunctionDefLibrary *library;
/** Test to see if @c library has been set. */
@property(nonatomic, readwrite) BOOL hasLibrary;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
