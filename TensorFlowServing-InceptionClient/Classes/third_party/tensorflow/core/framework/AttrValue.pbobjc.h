// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/framework/attr_value.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class AttrValue;
@class AttrValue_ListValue;
@class NameAttrList;
@class TensorProto;
@class TensorShapeProto;
GPB_ENUM_FWD_DECLARE(DataType);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - AttrValueRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface AttrValueRoot : GPBRootObject
@end

#pragma mark - AttrValue

typedef GPB_ENUM(AttrValue_FieldNumber) {
  AttrValue_FieldNumber_List = 1,
  AttrValue_FieldNumber_S = 2,
  AttrValue_FieldNumber_I = 3,
  AttrValue_FieldNumber_F = 4,
  AttrValue_FieldNumber_B = 5,
  AttrValue_FieldNumber_Type = 6,
  AttrValue_FieldNumber_Shape = 7,
  AttrValue_FieldNumber_Tensor = 8,
  AttrValue_FieldNumber_Placeholder = 9,
  AttrValue_FieldNumber_Func = 10,
};

typedef GPB_ENUM(AttrValue_Value_OneOfCase) {
  AttrValue_Value_OneOfCase_GPBUnsetOneOfCase = 0,
  AttrValue_Value_OneOfCase_S = 2,
  AttrValue_Value_OneOfCase_I = 3,
  AttrValue_Value_OneOfCase_F = 4,
  AttrValue_Value_OneOfCase_B = 5,
  AttrValue_Value_OneOfCase_Type = 6,
  AttrValue_Value_OneOfCase_Shape = 7,
  AttrValue_Value_OneOfCase_Tensor = 8,
  AttrValue_Value_OneOfCase_List = 1,
  AttrValue_Value_OneOfCase_Func = 10,
  AttrValue_Value_OneOfCase_Placeholder = 9,
};

/**
 * Protocol buffer representing the value for an attr used to configure an Op.
 * Comment indicates the corresponding attr type.  Only the field matching the
 * attr type may be filled.
 **/
@interface AttrValue : GPBMessage

@property(nonatomic, readonly) AttrValue_Value_OneOfCase valueOneOfCase;

/** "string" */
@property(nonatomic, readwrite, copy, null_resettable) NSData *s;

/** "int" */
@property(nonatomic, readwrite) int64_t i;

/** "float" */
@property(nonatomic, readwrite) float f;

/** "bool" */
@property(nonatomic, readwrite) BOOL b;

/** "type" */
@property(nonatomic, readwrite) enum DataType type;

/** "shape" */
@property(nonatomic, readwrite, strong, null_resettable) TensorShapeProto *shape;

/** "tensor" */
@property(nonatomic, readwrite, strong, null_resettable) TensorProto *tensor;

/** any "list(...)" */
@property(nonatomic, readwrite, strong, null_resettable) AttrValue_ListValue *list;

/**
 * "func" represents a function. func.name is a function's name or
 * a primitive op's name. func.attr.first is the name of an attr
 * defined for that function. func.attr.second is the value for
 * that attr in the instantiation.
 **/
@property(nonatomic, readwrite, strong, null_resettable) NameAttrList *func;

/**
 * This is a placeholder only used in nodes defined inside a
 * function.  It indicates the attr value will be supplied when
 * the function is instantiated.  For example, let us suppose a
 * node "N" in function "FN". "N" has an attr "A" with value
 * placeholder = "foo". When FN is instantiated with attr "foo"
 * set to "bar", the instantiated node N's attr A will have been
 * given the value "bar".
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *placeholder;

@end

/**
 * Fetches the raw value of a @c AttrValue's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t AttrValue_Type_RawValue(AttrValue *message);
/**
 * Sets the raw value of an @c AttrValue's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetAttrValue_Type_RawValue(AttrValue *message, int32_t value);

/**
 * Clears whatever value was set for the oneof 'value'.
 **/
void AttrValue_ClearValueOneOfCase(AttrValue *message);

#pragma mark - AttrValue_ListValue

typedef GPB_ENUM(AttrValue_ListValue_FieldNumber) {
  AttrValue_ListValue_FieldNumber_SArray = 2,
  AttrValue_ListValue_FieldNumber_IArray = 3,
  AttrValue_ListValue_FieldNumber_FArray = 4,
  AttrValue_ListValue_FieldNumber_BArray = 5,
  AttrValue_ListValue_FieldNumber_TypeArray = 6,
  AttrValue_ListValue_FieldNumber_ShapeArray = 7,
  AttrValue_ListValue_FieldNumber_TensorArray = 8,
  AttrValue_ListValue_FieldNumber_FuncArray = 9,
};

/**
 * LINT.IfChange
 **/
@interface AttrValue_ListValue : GPBMessage

/** "list(string)" */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSData*> *sArray;
/** The number of items in @c sArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger sArray_Count;

/** "list(int)" */
@property(nonatomic, readwrite, strong, null_resettable) GPBInt64Array *iArray;
/** The number of items in @c iArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger iArray_Count;

/** "list(float)" */
@property(nonatomic, readwrite, strong, null_resettable) GPBFloatArray *fArray;
/** The number of items in @c fArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger fArray_Count;

/** "list(bool)" */
@property(nonatomic, readwrite, strong, null_resettable) GPBBoolArray *bArray;
/** The number of items in @c bArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger bArray_Count;

/** "list(type)" */
// |typeArray| contains |DataType|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *typeArray;
/** The number of items in @c typeArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger typeArray_Count;

/** "list(shape)" */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<TensorShapeProto*> *shapeArray;
/** The number of items in @c shapeArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger shapeArray_Count;

/** "list(tensor)" */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<TensorProto*> *tensorArray;
/** The number of items in @c tensorArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger tensorArray_Count;

/** "list(attr)" */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NameAttrList*> *funcArray;
/** The number of items in @c funcArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger funcArray_Count;

@end

#pragma mark - NameAttrList

typedef GPB_ENUM(NameAttrList_FieldNumber) {
  NameAttrList_FieldNumber_Name = 1,
  NameAttrList_FieldNumber_Attr = 2,
};

/**
 * A list of attr names and their values. The whole list is attached
 * with a string name.  E.g., MatMul[T=float].
 **/
@interface NameAttrList : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, AttrValue*> *attr;
/** The number of items in @c attr without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger attr_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
