// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/framework/function.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class AttrValue;
@class FunctionDef;
@class GradientDef;
@class NodeDef;
@class OpDef;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - FunctionRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface FunctionRoot : GPBRootObject
@end

#pragma mark - FunctionDefLibrary

typedef GPB_ENUM(FunctionDefLibrary_FieldNumber) {
  FunctionDefLibrary_FieldNumber_FunctionArray = 1,
  FunctionDefLibrary_FieldNumber_GradientArray = 2,
};

/**
 * A library is a set of named functions.
 **/
@interface FunctionDefLibrary : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<FunctionDef*> *functionArray;
/** The number of items in @c functionArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger functionArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<GradientDef*> *gradientArray;
/** The number of items in @c gradientArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger gradientArray_Count;

@end

#pragma mark - FunctionDef

typedef GPB_ENUM(FunctionDef_FieldNumber) {
  FunctionDef_FieldNumber_Signature = 1,
  FunctionDef_FieldNumber_NodeDefArray = 3,
  FunctionDef_FieldNumber_Ret = 4,
  FunctionDef_FieldNumber_Attr = 5,
};

/**
 * A function can be instantiated when the runtime can bind every attr
 * with a value. When a GraphDef has a call to a function, it must
 * have binding for every attr defined in the signature.
 *
 * TODO(zhifengc):
 *   * device spec, etc.
 **/
@interface FunctionDef : GPBMessage

/**
 * The definition of the function's name, arguments, return values,
 * attrs etc.
 **/
@property(nonatomic, readwrite, strong, null_resettable) OpDef *signature;
/** Test to see if @c signature has been set. */
@property(nonatomic, readwrite) BOOL hasSignature;

/** Attributes specific to this function definition. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, AttrValue*> *attr;
/** The number of items in @c attr without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger attr_Count;

/**
 * By convention, "op" in node_def is resolved by consulting with a
 * user-defined library first. If not resolved, "func" is assumed to
 * be a builtin op.
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NodeDef*> *nodeDefArray;
/** The number of items in @c nodeDefArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger nodeDefArray_Count;

/**
 * A mapping from the output arg names from `signature` to the
 * outputs from `node_def` that should be returned by the function.
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *ret;
/** The number of items in @c ret without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger ret_Count;

@end

#pragma mark - GradientDef

typedef GPB_ENUM(GradientDef_FieldNumber) {
  GradientDef_FieldNumber_FunctionName = 1,
  GradientDef_FieldNumber_GradientFunc = 2,
};

/**
 * GradientDef defines the gradient function of a function defined in
 * a function library.
 *
 * A gradient function g (specified by gradient_func) for a function f
 * (specified by function_name) must follow the following:
 *
 * The function 'f' must be a numerical function which takes N inputs
 * and produces M outputs. Its gradient function 'g', which is a
 * function taking N + M inputs and produces N outputs.
 *
 * I.e. if we have
 *    (y1, y2, ..., y_M) = f(x1, x2, ..., x_N),
 * then, g is
 *    (dL/dx1, dL/dx2, ..., dL/dx_N) = g(x1, x2, ..., x_N,
 *                                      dL/dy1, dL/dy2, ..., dL/dy_M),
 * where L is a scalar-value function of (x1, x2, ..., xN) (e.g., the
 * loss function). dL/dx_i is the partial derivative of L with respect
 * to x_i.
 **/
@interface GradientDef : GPBMessage

/** The function name. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *functionName;

/** The gradient function's name. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *gradientFunc;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
